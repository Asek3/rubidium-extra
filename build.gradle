buildscript {
    dependencies {
        classpath "de.guntram.mcmod:crowdin-translate:${project.crowdin_translate}"
    }
    repositories {
        maven {
            name = 'CrowdinTranslate source'
            url = "https://minecraft.guntram.de/maven/"
        }
    }
}

plugins {
    id 'signing'
    id 'dev.architectury.loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
}

// apply plugin: 'de.guntram.mcmod.crowdin-translate'
// crowdintranslate.crowdinProjectName = 'sodium-extra'
// crowdintranslate.minecraftProjectName = 'sodium-extra'
// crowdintranslate.verbose = false

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+mc${project.minecraft_version}-${getVersionMetadata()}"
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/sodium-extra.accesswidener")

    forge {
        convertAccessWideners = true

        mixinConfigs = [
                "sodium-extra.mixins.json"
        ]
    }
}

repositories {
    maven { 
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url "https://maven.flashyreese.me/releases"
    }
    maven {
        url "https://maven.flashyreese.me/snapshots"
    }
    maven {
        url = "https://minecraft.guntram.de/maven/"
    }

    maven { url 'https://jitpack.io' }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    modImplementation "maven.modrinth:rubidium:${project.sodium_version}"
    modImplementation "maven.modrinth:textrues-rubidium-options:${project.reeses_sodium_options}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    // Currently using altrisi/CaffeineConfig until it is officially available through CaffeineMC's maven repository
    // Todo: Use https://github.com/CaffeineMC/mixin-config when available
    include(modImplementation("com.github.ThinkingStudios:ColaMixinConfig:${project.caffeineconfig_version}"))

	//modRuntimeOnly "curse.maven:lazydfu-460819:3831644"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

build {
    // dependsOn downloadTranslations
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from "LICENSE.txt"

    manifest.attributes([
            "Implementation-Title"  : project.archivesBaseName,
            "Implementation-Version": project.version
    ])
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        maven {
            name = "ConstructLegacy"
            url = "https://repo.constructlegacy.ru/public"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

static def getVersionMetadata() {
    def build_id = System.getenv("GITHUB_RUN_NUMBER")

    // CI builds only
    if (build_id != null) {
        return "build.${build_id}"
    }
    // No tracking information could be found about the build
    return "unknown"
}